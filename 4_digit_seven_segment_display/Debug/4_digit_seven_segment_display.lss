
4_digit_seven_segment_display.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000158  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001ac  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001dc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000d8  00000000  00000000  0000021c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a04  00000000  00000000  000002f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001a0  00000000  00000000  00000cf8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000041e  00000000  00000000  00000e98  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001dc  00000000  00000000  000012b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002ae  00000000  00000000  00001494  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000cb  00000000  00000000  00001742  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c8  00000000  00000000  0000180d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 76 00 	jmp	0xec	; 0xec <__vector_11>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 aa 00 	jmp	0x154	; 0x154 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  80:	50 9a       	sbi	0x0a, 0	; 10
  82:	51 9a       	sbi	0x0a, 1	; 10
  84:	52 9a       	sbi	0x0a, 2	; 10
  86:	53 9a       	sbi	0x0a, 3	; 10
  88:	55 9a       	sbi	0x0a, 5	; 10
  8a:	56 9a       	sbi	0x0a, 6	; 10
	_delay_ms(n);
	PORTC |= (1 << segment_2);
	_delay_ms(n);
	PORTC |= (1 << segment_3);
	_delay_ms(n);
	PORTC |= (1 << segment_4);
  8c:	57 9a       	sbi	0x0a, 7	; 10
  8e:	3d 9a       	sbi	0x07, 5	; 7
  90:	3c 9a       	sbi	0x07, 4	; 7
  92:	3a 9a       	sbi	0x07, 2	; 7
  94:	3b 9a       	sbi	0x07, 3	; 7
  96:	39 9a       	sbi	0x07, 1	; 7
  98:	22 9a       	sbi	0x04, 2	; 4
	_delay_ms(n);
	PORTB |= (1 << segment_5);
  9a:	38 9a       	sbi	0x07, 0	; 7
  9c:	40 9a       	sbi	0x08, 0	; 8
  9e:	42 9a       	sbi	0x08, 2	; 8
  a0:	2a 9a       	sbi	0x05, 2	; 5
  a2:	44 9a       	sbi	0x08, 4	; 8
  a4:	45 9a       	sbi	0x08, 5	; 8
  a6:	43 9a       	sbi	0x08, 3	; 8
	_delay_ms(n);
	PORTC |= (1 << segment_7);
  a8:	41 9a       	sbi	0x08, 1	; 8
  aa:	5d 98       	cbi	0x0b, 5	; 11
  ac:	5e 98       	cbi	0x0b, 6	; 11
  ae:	5f 98       	cbi	0x0b, 7	; 11
  b0:	e1 e8       	ldi	r30, 0x81	; 129
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
	_delay_ms(n);
	PORTC |= (1 << segment_6);
  b6:	88 60       	ori	r24, 0x08	; 8
  b8:	80 83       	st	Z, r24
  ba:	af e6       	ldi	r26, 0x6F	; 111
  bc:	b0 e0       	ldi	r27, 0x00	; 0
  be:	8c 91       	ld	r24, X
  c0:	82 60       	ori	r24, 0x02	; 2
  c2:	8c 93       	st	X, r24
	_delay_ms(n);
	
	/////////////////////
	
	num_1_on();
  c4:	78 94       	sei
  c6:	88 e3       	ldi	r24, 0x38	; 56
  c8:	91 e0       	ldi	r25, 0x01	; 1
  ca:	90 93 89 00 	sts	0x0089, r25
  ce:	80 93 88 00 	sts	0x0088, r24
  d2:	80 81       	ld	r24, Z
  d4:	83 60       	ori	r24, 0x03	; 3
  d6:	80 83       	st	Z, r24
  d8:	ff cf       	rjmp	.-2      	; 0xd8 <main+0x58>

000000da <num_1_tog>:
	_delay_ms(m);
	num_1_off();
  da:	98 b1       	in	r25, 0x08	; 8
  dc:	80 e2       	ldi	r24, 0x20	; 32
	
	num_2_on();
  de:	89 27       	eor	r24, r25
  e0:	88 b9       	out	0x08, r24	; 8
  e2:	98 b1       	in	r25, 0x08	; 8
  e4:	84 e0       	ldi	r24, 0x04	; 4
  e6:	89 27       	eor	r24, r25
  e8:	88 b9       	out	0x08, r24	; 8
  ea:	08 95       	ret

000000ec <__vector_11>:
  ec:	1f 92       	push	r1
  ee:	0f 92       	push	r0
  f0:	0f b6       	in	r0, 0x3f	; 63
  f2:	0f 92       	push	r0
	_delay_ms(m);
	num_2_off();
  f4:	11 24       	eor	r1, r1
  f6:	2f 93       	push	r18
	
	
	num_3_on();
  f8:	3f 93       	push	r19
  fa:	4f 93       	push	r20
  fc:	5f 93       	push	r21
  fe:	6f 93       	push	r22
 100:	7f 93       	push	r23
 102:	8f 93       	push	r24
 104:	9f 93       	push	r25
 106:	af 93       	push	r26
 108:	bf 93       	push	r27
 10a:	ef 93       	push	r30
 10c:	ff 93       	push	r31
	_delay_ms(m);
	num_3_off();
 10e:	9b b1       	in	r25, 0x0b	; 11
 110:	81 e0       	ldi	r24, 0x01	; 1
	
	
	num_4_on();
 112:	89 27       	eor	r24, r25
 114:	8b b9       	out	0x0b, r24	; 11
 116:	9b b1       	in	r25, 0x0b	; 11
 118:	82 e0       	ldi	r24, 0x02	; 2
 11a:	89 27       	eor	r24, r25
 11c:	8b b9       	out	0x0b, r24	; 11
 11e:	9b b1       	in	r25, 0x0b	; 11
 120:	84 e0       	ldi	r24, 0x04	; 4
 122:	89 27       	eor	r24, r25
 124:	8b b9       	out	0x0b, r24	; 11
 126:	9b b1       	in	r25, 0x0b	; 11
	_delay_ms(m);
	num_4_off();
 128:	88 e0       	ldi	r24, 0x08	; 8
 12a:	89 27       	eor	r24, r25
	

	num_5_on();
 12c:	8b b9       	out	0x0b, r24	; 11
 12e:	0e 94 6d 00 	call	0xda	; 0xda <num_1_tog>
 132:	ff 91       	pop	r31
 134:	ef 91       	pop	r30
 136:	bf 91       	pop	r27
 138:	af 91       	pop	r26
 13a:	9f 91       	pop	r25
 13c:	8f 91       	pop	r24
 13e:	7f 91       	pop	r23
 140:	6f 91       	pop	r22
	_delay_ms(m);
	num_5_off();
 142:	5f 91       	pop	r21
 144:	4f 91       	pop	r20
	
	
	num_6_on();
 146:	3f 91       	pop	r19
 148:	2f 91       	pop	r18
 14a:	0f 90       	pop	r0
 14c:	0f be       	out	0x3f, r0	; 63
 14e:	0f 90       	pop	r0
 150:	1f 90       	pop	r1
 152:	18 95       	reti

00000154 <_exit>:
 154:	f8 94       	cli

00000156 <__stop_program>:
 156:	ff cf       	rjmp	.-2      	; 0x156 <__stop_program>
